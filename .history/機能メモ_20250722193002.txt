- システム開発の目的(Why)→要件定義
    - 現状の課題は何か
    - 目指すべきゴールは何か
    - 現状とゴールのギャップは何か
- どのように課題を解決するか(What)→要件定義
    - 課題解決のために何が必要か
    - 機能要件
    - 非機能要件
- どのようなシステムを作るか(How)→設計
    - 画面設計
        - 画面遷移図
        - ワイヤーフレーム
    - 機能設計
        - システムアーキテクチャ
        - API設計
    - データ設計
        - ER図
        - データベース設計

1. 開発の目的を明確にする
2. 目的に合わせた機能やスケジュールを決める
3. 要件定義書を作成
    決めた内容をドキュメントに落とし込んだ書類
        a. 概要: アプリを開発する目的、背景、全体の概要を説明
        b. システム要件: アプリによってシステム化する業務の流れを明確にしたもの
                    　　流れの図解や組織図を添付して視覚的に見やすくするケースもある
        c. 

## 目的
- アムウェイなどのMLMにおける収支の現実を可視化し、冷静な判断材料を提供する
- 加入希望者や加入されている人に「数値で構造を理解させる」ことで過剰な期待や損失を未然に防ぐ
- シミュレーションによる教育的分析ツール」として提供

## 機能要件
1. 入力フォーム（ユーザーが設定できる変数）
自分の月間購入金額
    input
    円で入力
        初期値は'0'円
月間勧誘人数
    input
自分のダウンの継続率
    ％指定(固定)
        加入してから2ヶ月は継続率100%とする
        年間で50％が脱落。月間継続率に落とし込むと94.39%(100人いたら1ヶ月で94.3人になる)
        出典元: https://www.pyramidschemealert.org/PSAMain/resources/odds_of_success.pdf?utm_source=chatgpt.com
ダウンのダウンの継続率
    ％指定(固定)
        同上
ダウン人数の増加ペース
    ％指定(固定)
    増加人数は20人に勧誘して1人加入するものとする(5%固定)
        無作為な声かけ（友人・知人など）	約1 %
        ターゲット絞り込みあり（興味ある層）	約2–5%
        有料リード購入など興味前提あり	約8–15%
        出典元: https://www.iieej.org/public/committees/ssc/confs/ssc3/ssc3-2.pdf?utm_source=chatgpt.com
ダウンのダウン人数の増加ペース
    ％指定(固定)
    増加人数は20人に勧誘して1人加入するものとする(5%固定)
        同上
PV・BV換算式（設定不要、固定値にする、免責のため出典元は出さない）
    PV: 10,000円 / 1.5345 ≒　6,520
    BV: PV × 1.395 ≒ 9,100
活動費（セールス費用、交通費、イベント参加費）
    セールス費用は「月のセールス人数(ユーザーがインプットする)」にかけて計算する
    交通費は都心部、都市部、地方で差が発生するため、ユーザーにプルダウンでセールスエリアを選択させる
    一人当たりのセールス費: [都心部:1,000円, 地方都市:1,000円, 地方:900円]
    交通費　[都心部:6,000円, 地方都市:4,000円, 地方:4,000円]
    イベント参加費　[都心部:10,000円, 地方都市:7,000円, 地方:5,000円]
活動時間（勧誘活動時間、MLMイベント活動時間等）
    input
    ユーザーに平日の活動時間の平均を入力させる
    ユーザーに土日祝の活動時間の平均を入力させる
        入力された時間を合算し、* 4（4週間計算）で算出
報酬額の計算をコンポーネント化 複雑
    出展元: https://note.com/takenouchi_take/n/n5ceca19a0e30?utm_source=chatgpt.com
年間収益目標値
    ユーザーに目標としたい金額を入力させる
シミュレーション上限月
    360ヶ月で計算する

2. 出力結果の表示
各月のPV・BV・還元率・報酬（粗利益）・利益（純利益）・時給 を表示
累積利益グラフの表示
時給推移
収益が収益目標値 < シミュレーション上限月 の場合は収益目標値に達成した期間を表示（年月数でも表示）
収益が収益目標値 > シミュレーション上限月 の場合は30年続けても収益目標値に達成しなかった旨を表示

3. その他要件
システム形態　ローカル実行型のWebアプリ（Flask + Vue.js）
UI　シンプルかつ構造が理解しやすいレイアウト
ロジック　Pythonでシミュレーションを実行（差額ボーナス制を正確に反映）
    PVとBVの計算
    自分のダウンが購入した場合のPV/BVの配分
    自分のダウンのダウンが購入した場合のPV/BVの配分
免責表示　法的リスク回避のためのディスクレーマーを明示

## 使用予定技術
フロントエンド
    Vue.js
バックエンド
    Python + Flask
テンプレート
    Jinja2
グラフ描画
    Chart.js（PV/利益/時給推移）
実行環境
    ローカルPC
        追々はhttpsで公開も実施
